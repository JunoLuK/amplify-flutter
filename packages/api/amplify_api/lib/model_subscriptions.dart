/*
 * Copyright 2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

import 'package:amplify_api/src/graphql/model_subscriptions_factory.dart';
import 'package:amplify_core/amplify_core.dart';

/// Static helpers to generate subscription `GraphQLRequest` instances from models generated by Amplify codegen.
class ModelSubscriptions {
  ModelSubscriptions._(); // only static methods here, prevent calling constructor

  /// Generates a subscription request for the creation of any instance of the `modelType`.
  ///
  /// ```dart
  /// final request = ModelSubscriptions.onCreate(Todo.classType);
  /// ```
  static GraphQLRequest<M> onCreate<
      ModelIdentifier extends Object,
      M extends Model<ModelIdentifier, M>,
      P extends PartialModel<ModelIdentifier, M>>(
    ModelType<ModelIdentifier, M, P> modelType,
  ) {
    return ModelSubscriptionsFactory.instance.onCreate(modelType);
  }

  /// Generates a subscription request for the update of any instance of the `modelType`.
  ///
  /// ```dart
  /// final request = ModelSubscriptions.onUpdate(Todo.classType);
  /// ```
  static GraphQLRequest<M> onUpdate<
      ModelIdentifier extends Object,
      M extends Model<ModelIdentifier, M>,
      P extends PartialModel<ModelIdentifier, M>>(
    ModelType<ModelIdentifier, M, P> modelType,
  ) {
    return ModelSubscriptionsFactory.instance.onUpdate(modelType);
  }

  /// Generates a subscription request for the delete of any instance of the `modelType`.
  ///
  /// ```dart
  /// final request = ModelSubscriptions.onDelete(Todo.classType);
  /// ```
  static GraphQLRequest<M> onDelete<
      ModelIdentifier extends Object,
      M extends Model<ModelIdentifier, M>,
      P extends PartialModel<ModelIdentifier, M>>(
    ModelType<ModelIdentifier, M, P> modelType,
  ) {
    return ModelSubscriptionsFactory.instance.onDelete(modelType);
  }
}
